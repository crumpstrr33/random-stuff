"""
This function, randomize_file_names, will change the name of every file with 
file types included in ftype to a random name. In my wallpaper folder, I have a
bunch of random pictures in no discernable order so why not give them all random
names to uniform them in that manner?
"""
import os
import numpy as np
from string import ascii_uppercase, ascii_lowercase


def randomize_file_names(path, length, *args, amount=[], ftype=['png', 'jpg']):
    '''
    Parameters:
    path - the file path to the folder/directory with the files whose names
           will be randomized
    length - The length of the randomized names
    args - The different charaters sets that can be used. Currently this is
           the lowercase and uppercase letters and numbers (so a-z, A-Z and
           0-9). Pass strings to signify each one wanted to be used
    amount - (optional) the number of chars from each character set from args.
             So, sum(amount) must equal length. If nothing is passed to amount,
             then numbers are generated by splitting length evenly and adding
             1 from the remainder n to the first n elements of amount
    ftype - (optional) the file types whose names will be randomized
    '''
    ## Will automatically assign lengths depending on how many args there are
    ## It splits evenly and adds 1 from the remainder n to the first n elements
    ## of the list 'amount'
    if not amount:
        types = len(args)
        for n in range(types):
            whole_num = int(length / types)
            remainder = (length % types in np.arange(n + 1, types))
            amount.append(whole_num + remainder)

    ## Will not run if the amount is not equal to the length
    if sum(amount) != length:
        print('Sum of', amount, 'does not equal %d. Please retry.' % length)
        return
    if len(amount) < len(args):
        print('Only %d element(s) in \'amount\' but need %d.' % (len(amount), len(args)))
        return
    elif len(amount) > len(args):
        print('Too many elements in \'amount\'. Have %d, need only %d.' % (len(amount), len(args)))
        return

    ## Creates list to randomly choose from
    random_choosing = []
    for choice in args:
        if choice in ['lower', 'lowercase', 'lower_case', 'lc', 'low']:
            random_choosing.append(np.array(list(ascii_lowercase)))
        elif choice in ['upper', 'uppercase', 'upper_case', 'uc', 'up']:
            random_choosing.append(np.array(list(ascii_uppercase)))
        elif choice in ['numbers', 'number', 'num', 'no', '#']:
            random_choosing.append(np.arange(10))
        else:
            print('Received unknown keyword %s. Is not included in ' % choice +
                  'choices for character types.')
            return

    ## Goes through each file
    for file in os.listdir(path):
        ## Check if it is the correct file type
        if file[-3:] not in ftype:
            continue

        unique_name, no_of_tries = False, 0

        ## If name already exists, an exception is thrown and loop repeats
        ## Loop only repeats a max of no_of_tries times
        while not unique_name:
            if no_of_tries == 100:
                print('Max number of attempts (%d) reached. Program stopped.' % no_of_tries)
                return

            try:
                random_name = ''
                for n, char_type in enumerate(random_choosing):
                    random_name += ''.join(np.random.choice(char_type, amount[n]).astype(str))

                os.rename(os.path.join(path, file),
                          os.path.join(path, random_name + file[-4:]))

                unique_name = True
            except:
                no_of_tries += 1


def main():
    DIR = 'C:\\Users\\Jacob\\Pictures\\WallPaper Dump'

    randomize_file_names(DIR, 8, 'lc', 'no', amount=[3,5])

if __name__ == "__main__":
    main()